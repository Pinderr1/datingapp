rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isValidUser(data, uid) {
      return data.keys().hasAll(['uid', 'name', 'email']) &&
             data.uid == uid &&
             data.name is string &&
             data.email is string;
    }

    function isValidContactMessage(data) {
      return data.keys().hasOnly(['name', 'email', 'message', 'createdAt']) &&
             data.name is string && data.name.size() > 0 &&
             data.email is string &&
             data.email.size() > 0 &&
             // Disallow whitespace in email addresses
             data.email.matches("^[^@\s]+@[^@\s]+\.[^@\s]+$") &&
             data.message is string &&
             data.message.size() > 0 &&
             data.message.size() <= 2000 &&
             (!data.keys().hasAny(['createdAt']) || data.createdAt is timestamp);
    }

    match /users/{uid} {
      allow get: if request.auth != null && request.auth.uid == uid;
      allow create, update: if request.auth != null && request.auth.uid == uid &&
                            isValidUser(request.resource.data, uid);
    }

    match /contactMessages/{messageId} {
      allow create: if request.auth != null &&
                    isValidContactMessage(request.resource.data);
    }
  }
}
